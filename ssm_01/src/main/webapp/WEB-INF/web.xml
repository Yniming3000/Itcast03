<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>ssm_01</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
   <!-- 配置Spring 监听器，因为项目启动，最先加载web.xml,这里面配置了springmvc.xml文件，也会被加载，而spring
   的主配置文件，在测试中才被加载，想把service注入到controller中，就得启动服务器是也把spring的配置文件也加载了，服务器
   一启动就会创建servletcontext这个web中最大的域对象,只要监听这个的对象的创建与销毁，就可以加载spring的配置文件   -->
 
    
    <!--监听器默认加载WEB-INFO目录下的配置问价，要把配置文件全局初始化   局部初始化和全局初始化互不影响，有就加载自己的 -->
    <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 配置文件初始化 -->
      <context-param>
          <param-name>contextConfigLocation</param-name>
          <param-value>classpath:applicationcontext.xml</param-value>
      </context-param>
  
   <!--构建控制器-->
   <servlet>
      <servlet-name>dispatcherServlet</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <!-- 初始化，服务器一打开就加载SpringMVC的配置问价-->
      <init-param>
         <param-name>contextConfigLocation</param-name>
         <param-value>classpath:springmvc.xml</param-value>
      </init-param>
      <!-- 服务器一打开就创建这个servlet -->
      <load-on-startup>1</load-on-startup>
   </servlet>
   <servlet-mapping>
       <servlet-name>dispatcherServlet</servlet-name>
       <url-pattern>/</url-pattern>
   </servlet-mapping>
    <!-- 解决中文乱码 -->
   <filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>